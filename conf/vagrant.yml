---

- hosts: default
  become: true
  become_method: sudo
  user: vagrant
  roles:
   - { role: base, tags: [ 'base' ] }
   - { role: php-fpm, tags: [ 'php-fpm' ] }
   - { role: nginx, tags: [ 'nginx' ] }
   - { role: varnish, tags: [ 'varnish' ] }
   - { role: memcached, tags: [ 'memcached' ] }
   - { role: drush, tags: [ 'drush' ] }
   - { role: drupal-console, tags: ['drupal-console']}
   - { role: dbserver, tags: [ 'dbserver' ] }
   - { role: drupal-db, tags: [ 'drupal-db' ] }
   # Local replacement for letsencrypt. Uses letsencrypt settings but creates self signed certificates for local use.
   - { role: selfencrypt, tags: [ 'selfencrypt' ] }
   - { role: sslterminator, tags: [ 'sslterminator' ] }
   # Devtools, uncomment to enable xdebug and blackfire
   # To use blackfire you need to define blackfire keys and tokens (see ansible/playbook/roles/devtools/defaults/main.yml for reference)
   # You can get those keys and tokens from https://blackfire.io/docs/up-and-running/installation
   # Otherwise you can disable blackfire by setting enable_blackfire: false
   #- { role: devtools, tags: [ 'devtools' ] }
   # Mailhog, uncomment to catch outgoing mail. You can access mailhog at your local site url on port 8025
   #- { role: mailhog, tags: [ 'mailhog' ] }
   # Optional HHVM role.
   # Requires WunderMachina hhvm branch https://github.com/wunderkraut/WunderMachina/tree/hhvm
   # More in-depth instructions at https://github.com/wunderkraut/WunderTools/wiki/HHVM
   #- { role: hhvm, tags: [ 'hhvm' ] }

  tasks:

    - cron: name="check dirs" minute="0" hour="5,2" job="ls -alh > /dev/null"

  vars:
    partition_var_log: False

    wkv_site_env: local

    partition_var_lib_mysql: False

    # Do not use this in production. For local only.
    nginx_disable_content_security_policy: True

    memory_db: 1024 # In MB
    memory_app: 1024 # In MB
    # NOTE: ALWAYS leave some spare memory for the server
    php_memory_limit: 256 # In MB
    nginx_workers: 2 # This should be equal to core count

    letsencrypt_email: support@example.com
    letsencrypt_domains:
      - wundertools.site
      - local.wundertools.site

    newrelic_enabled: False
    newrelic_license_key: "this-is-a-fake-key-replace-with-a-real-1"

    monit_enabled: False
    logentries_enabled: False

    # Apps I want to run on this server
    apps:
      - server_name: local.wundertools.site
        server_forwards: wundertools.site
        http_port: 8080
        docroot: /vagrant/drupal/current/web

    # This server also acts as a load balancer
    varnish:
      probe_resource_url: "_ping.php"
      port: 8081
      memory: 512M
      acl_internal:
        - ip: 127.0.0.1
      acl_purge:
        - ip: 127.0.0.1
      acl_upstream_proxy:
        - ip: 127.0.0.1
      directors:
        - name: wundertools
          host: local.wundertools.site
          backends:
            - name: wundertools_http
              address: 127.0.0.1
              port: 8080
      probe_resource_url: "_ping.php"

    # BUT, we only use https for this host
    sslterminators:
      - server_name: local.wundertools.site
        server_forwards: wundertools.site
        ssl_certificate: /etc/nginx/certificate.crt
        ssl_certificate_key: /etc/nginx/ssl/certificate.key
        backends:
          - 127.0.0.1:80

    httpforwards: {}

    # Databases
    databases:
      - name: drupal
        user: drupal
        pass: password
        hosts:
          - "127.0.0.1"
          - "::1"
          - "localhost"
