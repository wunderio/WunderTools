---
# The default environment is our local development environment.
# Note that the the default site is used as a base for all sites, so whatever you define here are inherited to
# other site definitions!
default:
  aliases:
    - vagrant
    - local

  # It's D7, but build.sh doesn't support D7 composer builds.
  drupal_version: d8

  # Installation profile to use
  profile: wundertools

  # Site name given at installation phase
  site: Wundertools

  # Symlink settings file for vagrant
  link:
    - conf/vagrant.settings.php: web/sites/default/files/settings.local.php

  # These commands will be used in all environments unless they are overridden.
  local_commands:
    # Set up a new build
    build:
      - shell: chmod -R a+w web
      - make
      - shell: chmod -R a-w web

    # Run any build updates.
    update:
      - drush: updb -y
      - cleanup
      - drush: cc all

    # Fresh start for Composer build.
    reset:
      - verify: "Warning: this will remove any files that are not part of the repository (including files folder). Do you want to continue? (yes/no): "
      - shell: git clean -ffXd

lando:
  # Allow development modules to be installed.
  allow_composer_dev: true

  # Symlink files folder. This is generic location for both dev and stage environments.
  link:
    - files: web/sites/default/files

# Development environment
dev:
  # Allow development modules to be installed.
  allow_composer_dev: true

  # Symlink files folder. This is generic location for both dev and stage environments.
  link:
    - /var/www/wundertools.dev.wunder.io/files: web/sites/default/files

  # Settings file and radioactivity are copied. Settings file also is placed on a generic location on both dev and stage environments.
  copy:
    - conf/dev.settings.php: web/sites/default/settings.local.php

  # Staging server specific build commands.
  local_commands:
    # Run any build updates.
    update:
      - drush: updb -y
      - cleanup
      - drush: cc all
      - shell: sudo systemctl reload nginx && sudo systemctl restart php-fpm memcached varnish

# Staging environment:
stage:
  aliases:
    - test

  # Allow development modules to be installed.
  allow_composer_dev: true

  # Symlink files folder. This is generic location for both dev and stage environments.
  link:
    - /var/www/wundertools.stage.wunder.io/files: web/sites/default/files

  # Settings file and radioactivity are copied. Settings file also is placed on a generic location on both dev and stage environments.
  copy:
    - conf/stage.settings.php: web/sites/default/settings.local.php

  # Staging server specific build commands.
  local_commands:
    # Set up a new build and rsync it to front2.
    build:
      - shell: chmod -R a+w web
      - backup:
          ignore:
            - sites/default/files
            - builds
      - make
      - shell: chmod -R a-w web

    # Run any build updates.
    update:
      - drush: updb -y
      - cleanup
      - drush: cc all
      - shell: sudo systemctl reload nginx && sudo systemctl restart php-fpm memcached varnish

# Production environment
production:
  aliases:
    - prod

  # Symlink files folder from NFS share.
  link:
    - /var/www/www.wundertools.fi/files: web/sites/default/files
    - /var/www/www.wundertools.fi/private: web/sites/default/private

  # Copy settings file.
  copy:
    - /var/www/www.wundertools.fi/prod.settings.php: web/sites/default/settings.local.php

  # Production specific commands.
  local_commands:
    # Set up a new build and rsync it to front2.
    build:
      - shell: chmod -R a+w web
      - backup:
          ignore:
            - sites/default/files
            - builds
      - make
      - shell: chmod -R a-w web

    # Run any build updates.
    update:
      - drush: updb -y
      - cleanup
      - drush: cc all
      - shell: sudo systemctl reload nginx && sudo systemctl reload php-fpm && sudo systemctl restart memcached
