stack: wunder/drupal

variables:
  drupal-mysql-root:
    type: string
    from:
      vault: ${STACK}-mysql-root
      random_string: 32
    to:
      vault: ${STACK}-mysql-root
  drupal-mysql-password:
    type: string
    from:
      vault: ${STACK}-mysql-password
      random_string: 32
    to:
      vault: ${STACK}-mysql-password
  drupal-hash-salt:
    type: string
    from:
      vault: ${STACK}-hash-salt
      random_string: 32
    to:
      vault: ${STACK}-hash-salt
  basicauth_credentials:
    type: string
    from:
      env: BASICAUTH
      prompt: Basicauth credentials in the format "user [username] insecure-password [password]"
  virtualhost:
    type: string
    from:
      env: VIRTUALHOST
      prompt: Virtualhost
  loadbalancer:
    type: string
    required: true
    from:
      env: LOADBALANCER
      service_link:
        prompt: Choose a loadbalancer
        image: kontena/lb
  docker-image-prefix:
    type: string
    from:
      env: DOCKER_IMAGE_PREFIX
      prompt: Docker image prefix
  docker-image-version:
    type: string
    from:
      env: DOCKER_IMAGE_VERSION
      prompt: Docker image version
services:
  nginx:
    image: images.kontena.io/wunder/{{ docker-image-prefix }}-nginx:{{ docker-image-version }}
    build:
      context: web
    instances: 1
    depends_on:
      - drupal
    environment:
      NGINX_STATIC_CONTENT_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: drupal
      NGINX_SERVER_ROOT: /var/www/html/web
      KONTENA_LB_MODE: http
      KONTENA_LB_BALANCE: roundrobin
      KONTENA_LB_INTERNAL_PORT: 80
      KONTENA_LB_VIRTUAL_HOSTS: "{{ virtualhost }}"
      # {% if basicauth_credentials %}
      KONTENA_LB_BASIC_AUTH_SECRETS: {{ basicauth_credentials }}
      # {% endif %}
    links:
      - {{ loadbalancer }}
    volumes:
      - drupal_files:/var/www/html/web/sites/default/files
    affinity:
      - "service==drupal"
  drupal:
    image: images.kontena.io/wunder/{{ docker-image-prefix }}-drupal:{{ docker-image-version }}
    build:
      context: .
    instances: 1
    depends_on:
      - db
    environment:
      PHP_FPM_CLEAR_ENV: "no"
      DB_USER: drupal
      DB_NAME: drupal
      DB_HOST: db
    secrets:
      - secret: ${STACK}-mysql-password
        name: DB_PASSWORD
        type: env
      - secret: ${STACK}-hash-salt
        name: HASH_SALT
        type: env
    volumes:
      - drupal_files:/var/www/html/web/sites/default/files
  db:
    image: mariadb:10.2
    stateful: true
    environment:
      MYSQL_DATABASE: drupal
      MYSQL_USER: drupal
    secrets:
      - secret: ${STACK}-mysql-root
        name: MYSQL_ROOT_PASSWORD
        type: env
      - secret: ${STACK}-mysql-password
        name: MYSQL_PASSWORD
        type: env
    deploy:
      wait_for_port: 3306
    health_check:
      protocol: tcp
      port: 3306
      interval: 10
      initial_delay: 10
      timeout: 2
volumes:
  drupal_files:
    external:
      name: ${STACK}_files
